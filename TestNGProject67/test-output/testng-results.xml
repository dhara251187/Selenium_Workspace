<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="10" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="100" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
    <groups>
      <group name="nikul">
        <method signature="Testing1.test3()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test3" class="selenium.Testing1"/>
      </group> <!-- nikul -->
      <group name="smoke">
        <method signature="Testing3.createUser()[pri:1, instance:selenium.Testing3@6ddf90b0]" name="createUser" class="selenium.Testing3"/>
        <method signature="Testing1.test1()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test1" class="selenium.Testing1"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Testing1.test2()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test2" class="selenium.Testing1"/>
      </group> <!-- sanity -->
    </groups>
    <test name="Test" duration-ms="100" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
      <class name="selenium.Testing2">
        <test-method status="PASS" signature="test4()[pri:0, instance:selenium.Testing2@2b2948e2]" name="test4" duration-ms="2" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:selenium.Testing2@2b2948e2]" name="test5" duration-ms="2" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing3">
        <test-method status="FAIL" signature="createUser()[pri:1, instance:selenium.Testing3@6ddf90b0]" name="createUser" duration-ms="5" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verifying Element did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verifying Element did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at selenium.Testing3.createUser(Testing3.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="SKIP" signature="editUser()[pri:2, instance:selenium.Testing3@6ddf90b0]" name="editUser" duration-ms="0" started-at="2022-11-12T10:53:31 EST" depends-on-methods="selenium.Testing3.createUser" finished-at="2022-11-12T10:53:31 EST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.editUser()[pri:2, instance:selenium.Testing3@6ddf90b0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.editUser()[pri:2, instance:selenium.Testing3@6ddf90b0] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUser -->
        <test-method status="SKIP" signature="deleteUser()[pri:3, instance:selenium.Testing3@6ddf90b0]" name="deleteUser" duration-ms="0" started-at="2022-11-12T10:53:31 EST" depends-on-methods="selenium.Testing3.editUser" finished-at="2022-11-12T10:53:31 EST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.deleteUser()[pri:3, instance:selenium.Testing3@6ddf90b0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.deleteUser()[pri:3, instance:selenium.Testing3@6ddf90b0] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
      </class> <!-- selenium.Testing3 -->
      <class name="selenium.Testing1">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeSuite" is-config="true" duration-ms="13" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeTest" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeClass" is-config="true" duration-ms="0" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@eec5a4a]" name="f" duration-ms="6" started-at="2022-11-12T10:53:31 EST" data-provider="dp" finished-at="2022-11-12T10:53:31 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@eec5a4a]" name="f" duration-ms="1" started-at="2022-11-12T10:53:31 EST" data-provider="dp" finished-at="2022-11-12T10:53:31 EST">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test1()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test1" duration-ms="2" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test2()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test2" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="test3()[pri:0, instance:selenium.Testing1@eec5a4a]" name="test3" duration-ms="2" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterClass" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterTest" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:selenium.Testing1@eec5a4a]" name="afterSuite" is-config="true" duration-ms="1" started-at="2022-11-12T10:53:31 EST" finished-at="2022-11-12T10:53:31 EST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
